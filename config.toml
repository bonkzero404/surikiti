[server]
port = 8086
host = "0.0.0.0"
# WebSocket port - can be the same as 'port' to use single port for both HTTP and WebSocket
# Note: Using same port is experimental and may have limitations with gnet
websocket_port = 8088

# HTTP Upstream servers configuration
[[upstreams]]
name = "backend1"
url = "http://localhost:3001"
weight = 1
health_check = "/health"

[[upstreams]]
name = "backend2"
url = "http://localhost:3002"
weight = 1
health_check = "/health"

[[upstreams]]
name = "backend3"
url = "http://localhost:3003"
weight = 2
health_check = "/health"

# WebSocket Upstream servers configuration
[[websocket_upstreams]]
name = "websocket_backend"
url = "ws://localhost:3004"
weight = 1
health_check = "/health"

[load_balancer]
method = "least_connections"  # round_robin, weighted_round_robin, least_connections, single
timeout = "30s"
max_retries = 3

[logging]
level = "info"
file = "proxy.log"

[proxy]
max_body_size = 10485760        # Maximum request body size (10MB)
request_timeout = "15s"         # Timeout for upstream requests (increased from 5s)
response_timeout = "30s"        # Timeout for response handling (increased from 15s)
max_header_size = 8192          # Maximum header size in bytes
keep_alive_timeout = "60s"      # Keep-alive timeout
max_connections = 1000          # Maximum concurrent connections
buffer_size = 32768             # Buffer size for I/O operations
enable_compression = true       # Enable response compression
max_idle_conns = 100            # Maximum idle connections in pool
max_idle_conns_per_host = 50    # Maximum idle connections per host
max_conns_per_host = 500        # Maximum connections per host
idle_conn_timeout = "90s"       # Idle connection timeout

# Protocol Support
enable_http2 = true             # Enable HTTP/2 support
enable_http3 = true             # Enable HTTP/3 support (requires TLS)
enable_websocket = true         # Enable WebSocket proxying
http3_port = 8443               # HTTP/3 UDP port (QUIC)
tls_cert_file = "certs/server.crt"              # Path to TLS certificate file
tls_key_file = "certs/server.key"               # Path to TLS private key file
websocket_timeout = "300s"      # WebSocket connection timeout (5 minutes)
websocket_buffer_size = 4096    # WebSocket message buffer size

[cors]
enabled = false
allowed_origins = ["*"]
allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
allowed_headers = ["Content-Type", "Authorization", "X-Requested-With"]
exposed_headers = ["X-Total-Count"]
allow_credentials = false
max_age = 86400                  # 24 hours